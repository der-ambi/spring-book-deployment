version: "3.8"
services:

  # Applications

  catalog-service:
    depends_on:
      - polar-postgres
      - config-service
      - polar-keycloak
      - tempo
    image: "catalog-service"
    container_name: "catalog-service"
    ports:
      - 9001:9001
      - 8001:8001
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.33.6.jar
      - OTEL_SERVICE_NAME=catalog-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_METRICS_EXPORTER=none
      # - OTEL_JAVAAGENT_DEBUG=true
      # Buildpacks environment variable to configure the number of threads in memory calculation
      - BPL_JVM_THREAD_COUNT=50
      # Buildpacks environment variable to enable debug through a socket on port 8001
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - SPRING_PROFILES_ACTIVE=testdata
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
    logging:
      driver: k8s-file
      options:
        path: "/Users/ambi/Projects/spring-book/catalog-service.json"
        max-size: 10mb
  
  config-service:
    image: "config-service"
    container_name: "config-service"
    ports:
      - 8888:8888
      - 9888:9888
    environment:
      # Buildpacks environment variable to configure the number of threads in memory calculation
      - BPL_JVM_THREAD_COUNT=50
      # Buildpacks environment variable to enable debug through a socket on port 9888
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=9888

  order-service:
    depends_on:
      - polar-postgres
      - config-service
      - catalog-service
    #      - fluent-bit
    image: "order-service"
    container_name: "order-service"
    ports:
      - 9002:9002
      - 8002:8002
    environment:
      # Buildpacks environment variable to enable debug through a socket on port 8002
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8002
      - POLAR_CATALOG_SERVICE_URI=http://catalog-service:9001
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_RABBITMQ_HOST=polar-rabbitmq

  edge-service:
    depends_on:
      - polar-redis
      - polar-keycloak
      - catalog-service
      - order-service
      - tempo
    #      - fluent-bit
    image: "edge-service"
    container_name: "edge-service"
    ports:
      - 9000:9000
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.33.6.jar
      - OTEL_SERVICE_NAME=edge-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_METRICS_EXPORTER=none
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - SPA_URL=http://polar-ui:9004
      - SPRING_DATA_REDIS_HOST=polar-redis
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
    logging:
      driver: k8s-file
      options:
        path: "/Users/ambi/Projects/spring-book/edge-service.json"
        max-size: 10mb

  dispatcher-service:
    depends_on:
      - polar-rabbitmq
    #      - fluent-bit
    image: "dispatcher-service"
    container_name: "dispatcher-service"
    ports:
      - 9003:9003
    environment:
      - SPRING_RABBITMQ_HOST=polar-rabbitmq


  polar-ui:
    image: "ghcr.io/polarbookshop/polar-ui:v1"
    container_name: "polar-ui"
    ports:
      - 9004:9004
    environment:
      - PORT=9004

  # Backing Services

  polar-postgres:
    image: "postgres:16"
    container_name: "polar-postgres"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=Passw0rd
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  polar-redis:
    image: "redis:7.4"
    container_name: polar-redis
    ports:
      - 6379:6379

  polar-rabbitmq:
    image: "rabbitmq:3.13-management-alpine"
    container_name: polar-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  polar-keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: polar-keycloak
    command: start-dev --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      - KEYCLOAK_ADMIN=user
      - KEYCLOAK_ADMIN_PASSWORD=Passw0rd
    ports:
      - 8080:8080


  # Observability

  grafana:
    image: grafana/grafana-oss:10.4.8
    container_name: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
      - promtail
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini

  loki:
    image: grafana/loki:3.0.1
    container_name: loki
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"

  promtail:
    image: bitnami/promtail:3.1.1
    container_name: promtail
    command: "-config.file /etc/promtail/config.yml"
    depends_on:
      - loki
    ports:
      - "9080:9080"
    volumes:
      - ./observability/promtail/config.yml:/etc/promtail/config.yml
      - /Users/ambi/Projects/spring-book/catalog-service.json:/tmp/catalog-service.json
      - /Users/ambi/Projects/spring-book/edge-service.json:/tmp/edge-service.json

  #  fluent-bit:
  #    image: grafana/fluent-bit-plugin-loki:2.9.10
  #    container_name: fluent-bit
  #    ports:
  #      - "24224:24224"
  #    environment:
  #      - LOKI_URL=http://loki:3100/loki/api/v1/push
  #    volumes:
  #      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf

  prometheus:
    image: quay.io/prometheus/prometheus:v2.54.1
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo:1.5.0
    container_name: tempo
    command: -config.file=/etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTel grpc
      - "4318:4318"     # OTel http
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml
